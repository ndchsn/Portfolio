name: Build and Deploy to Cloud Run loh ya

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: mlpt-cloudteam-migration
      GCP_REGION: asia-southeast2
      # IMAGE will be computed at runtime in a step so we avoid workflow
      # expression-in-env lint warnings. The image target uses Artifact
      # Registry regional host (asia-southeast2-docker.pkg.dev).
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: mlpt-cloudteam-migration

      - name: Verify gcloud authentication and project
        run: |
          # Show authenticated accounts and active project to verify the SA key was applied
          echo "gcloud auth list:";
          gcloud auth list || true
          echo "gcloud config get-value project:";
          gcloud config get-value project || true

      - name: Configure Docker for Artifact Registry
        run: |
          # Configure docker credential helper for Artifact Registry host used by IMAGE
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      - name: Ensure Artifact Registry repo exists
        run: |
          # Fail early with a helpful message if the repo is missing. The
          # service account should already have roles/artifactregistry.writer.
          if ! gcloud artifacts repositories describe portfolio-repo --location="$GCP_REGION" --project="$GCP_PROJECT_ID" >/dev/null 2>&1; then
            echo "ERROR: Artifact Registry repository 'portfolio-repo' not found in region $GCP_REGION for project $GCP_PROJECT_ID." >&2
            echo "Create it with: gcloud artifacts repositories create portfolio-repo --repository-format=docker --location=$GCP_REGION --project=$GCP_PROJECT_ID" >&2
            exit 1
          fi

      - name: Build and push Docker image
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          set -e
          IMAGE_HOST="asia-southeast2-docker.pkg.dev"
          IMAGE="$IMAGE_HOST/$GCP_PROJECT_ID/portfolio-repo/portfolio-flask:$GITHUB_SHA"
          echo "Building and pushing image: $IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          # Recompute IMAGE here to pass to gcloud run deploy
          IMAGE_HOST="asia-southeast2-docker.pkg.dev"
          IMAGE="$IMAGE_HOST/$GCP_PROJECT_ID/portfolio-repo/portfolio-flask:$GITHUB_SHA"
          gcloud run deploy portfolio-flask \
            --image "$IMAGE" \
            --platform managed \
            --region "$GCP_REGION" \
            --allow-unauthenticated \
            --quiet

      - name: Smoke test Cloud Run service
        run: |
          set -e
          # get service URL
          URL=$(gcloud run services describe portfolio-flask --platform managed --region "$GCP_REGION" --format 'value(status.url)')
          echo "Service URL: $URL"

          # simple retry loop: try up to 10 times, 5s between tries
          n=0
          until [ $n -ge 10 ]
          do
            echo "Attempt $((n+1)) to curl $URL"
            if curl -fsS -m 10 "$URL" >/dev/null; then
              echo "Smoke test passed"
              exit 0
            fi
            n=$((n+1))
            sleep 5
          done

          echo "Smoke test failed: service did not respond with HTTP 200 within retries"
          exit 1
